snippet cmake "CMake template" b
cmake_minimum_required(VERSION 2.8 FATAL_ERROR)

project(${1:name})

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/Modules/" ${CMAKE_MODULE_PATH})
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

option(BUILD_TESTS "Build tests." OFF)

add_definitions(-fcolor-diagnostics)
add_definitions(-std=c++11)
add_definitions(-Wall)

include_directories(
  ${PROJECT_SOURCE_DIR}/include
)

if(BUILD_TESTS)
  enable_testing()
  add_subdirectory(test)
endif()
endsnippet

snippet sec "Section comment" !b
`!p
padding = 78 - len(t[1]) - 8
snip.rv = '#...: '
`${1:Section}`!p
snip.rv = ' :' + padding * '.'`
$0
endsnippet

snippet werror "Warnings and errors" !b
#...: treat warnings as errors and disable centain warnings
add_definitions(-Werror)
add_definitions(-Wno-error=unused-variable)
add_definitions(-Wno-error=unknown-pragmas)
add_definitions(-Wno-unknown-pragmas)
add_definitions(-Wno-deprecated)
endsnippet

snippet wall "Warnings as errors" !b
#...: enable all but certain warnings
add_definitions(-Wall)
add_definitions(-Wno-unknown-pragmas)
add_definitions(-Wno-deprecated)
add_definitions(-fpermissive)
endsnippet

snippet exe "Add executable target" !b
add_executable(${1:test}
  ${2:src/test.cpp}
)
endsnippet

snippet lib "Add library" !b
add_library(${1:lib}
  ${2:src/lib.cpp}
)
endsnippet

snippet link "Link libraries" !b
target_link_libraries(${1:test}
  ${2:library}
)
endsnippet

snippet pcl "Use PCL" b
find_package(PCL 1.7.2 REQUIRED)
include_directories(
  ${PCL_INCLUDE_DIRS}
)
link_directories(
  ${PCL_LIBRARY_DIRS}
)
add_definitions(
  ${PCL_DEFINITIONS}
)
endsnippet

snippet find "Find package" b
find_package(${1:package}${2/.+/ COMPONENTS /}${2:component}${3/.+/ /}${3:REQUIRED})
endsnippet
