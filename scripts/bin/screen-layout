#!/bin/bash

function show_help() {
  cat << EOF
  Usage: ${0##*/} [-h] layout

  This script configures the screen layout according to predefined rules.
  Supported layouts: laptop, office.

  If layout is not given, then count the number of connected displays and
  choose between laptop and office accordingly.

  Options:

    -h        Display this help and exit.
EOF
}

function set_layout()
{
  case $1 in
    laptop) xrandr --output $EDP1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output $DP21 --off --output $DP22 --off --output $DP23 --off;;
    office-0) xrandr --output $EDP1 --off --output $DP21 --off --output $DP22 --off --output $DP23 --off;;
    office-1) xrandr --output $EDP1 --off --output $DP21 --off --output $DP22 --mode 2560x1440 --pos 0x0 --rotate normal --output $DP23 --off;;
    office-2) xrandr --output $EDP1 --off --output $DP21 --mode 1680x1050 --pos 2560x0 --rotate normal --output $DP22 --mode 2560x1440 --pos 0x0 --rotate normal --output $DP23 --off;;
    office) xrandr --output $EDP1 --off --output $DP21 --mode 1680x1050 --pos 4240x0 --rotate normal --output $DP22 --mode 2560x1440 --pos 1680x0 --rotate normal --output $DP23 --mode 1680x1050 --pos 0x0 --rotate normal;;
  esac
  sleep 7
}

while [ $# -gt 0 ]; do
  case "$1" in
    -h) show_help
        exit 0
        ;;
     *) layout=$1
        ;;
  esac
  shift
done

# Monitor naming scheme changes from time to time
# Sometimes it has dashes (eDP-1), sometimes it does not (eDP1)
# We detect the current scheme and set monitor names accordingly

if [[ `xrandr | grep eDP1` ]]; then
  EDP1='eDP1'
  DP21='DP2-1'
  DP22='DP2-2'
  DP23='DP2-3'
else
  EDP1='eDP-1'
  DP21='DP-2-1'
  DP22='DP-2-2'
  DP23='DP-2-3'
fi

if [[ $layout == "" ]]; then
  displays=`xrandr --query | grep -c " connected "`
  echo -n "Number of connected displays: $displays, "
  if [[ $displays == 4 ]]; then
    layout='office'
    echo "auto selecting layout: $layout"
  elif [[ $displays == 1 ]]; then
    layout='laptop'
    echo "auto selecting layout: $layout"
  else
    echo "unable to auto select layout"
    exit 1
  fi
fi

if [[ $layout == "laptop" ]]; then
  set_layout "laptop"
elif [[ $layout == "office" ]]; then
  set_layout "office-0"
  set_layout "office-1"
  set_layout "office-2"
  set_layout "office"
else
  echo "Unknown layout '$layout'"
  exit 1
fi

xmonad --restart
